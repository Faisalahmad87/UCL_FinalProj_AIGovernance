,train_cv_f1,val_cv_f1,accuracy,f1,roc_auc,stat_parity,equal_opp,equal_odds,avg_odds_diff,tpr,fpr,fnr,best_model
XGB,0.5902545011438031,0.580776137229912,0.8686567164179104,0.7115156780924163,0.9280095262582689,-0.08566494276596441,-0.0320808234582004,0.03920308939974209,-0.025548039692518995,0.655107146373281,0.061144102837686426,0.344892853626719,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric='logloss',
                               feature_types=None, feature_weights=None,
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.1,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=7, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=100, n_jobs=None,
                               num_parallel_tree=None, ...))])"
LGBM,0.6218172995836916,0.6070814165534678,0.8674405749032615,0.7110708808691749,0.9271558040573961,-0.09325743152204358,-0.04187364056634172,0.04936371440115395,-0.03394134972781631,0.6596017091973468,0.06423625707431906,0.3403982908026532,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf', LGBMClassifier(max_depth=20, random_state=57))])"
GBM,0.585826935278599,0.5777901267585398,0.8686567164179104,0.7103174623953196,0.9271300936612873,-0.08886211403801463,-0.04415320814452176,0.04415320814452176,-0.03248025373823641,0.6511331268289785,0.05983305912769029,0.34886687317102155,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf',
                 GradientBoostingClassifier(max_depth=5, random_state=57))])"
RF,0.8038176848830588,0.6672876822073359,0.8572692095080154,0.6849029397782346,0.9102583229496145,-0.08209768770942923,-0.015429641001383665,0.049723274322673726,-0.019129220804548264,0.6275388677478725,0.06718104909462395,0.37246113225212757,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf',
                 RandomForestClassifier(max_depth=30, n_estimators=200,
                                        random_state=57))])"
MLP,0.6787694094242945,0.6787694094242945,0.8467661691542289,0.6754987971562075,0.9004542231717391,-0.11122055301447781,-0.07117105116700095,0.08135731018381454,-0.05905308924897492,0.6441899681812956,0.08655581546022402,0.35581003181870435,"PyTorchMLPWrapper(hidden_dim=32, input_dim=93, lr=0.01)"
DT,0.8137839892221354,0.6452198972600809,0.8556108347153124,0.6704065697156537,0.9033291848078542,-0.08603185400152356,-0.02750468252407164,0.05203807696809167,-0.02828962072321452,0.5940362863954814,0.058370136580525055,0.4059637136045186,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf', DecisionTreeClassifier(max_depth=10, random_state=57))])"
LR,0.6609170194049069,0.6590343132631846,0.8479823106688779,0.6665044147837099,0.9037778031358181,-0.08947126645077445,-0.014856863573480372,0.03429632702285936,-0.024576595298169867,0.6138022207922004,0.0749683799234214,0.3861977792077996,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf',
                 LogisticRegression(C=10, max_iter=2000, random_state=57,
                                    solver='liblinear'))])"
NB,0.5383493294502588,0.5369412414328424,0.6243228302929795,0.5515242989258958,0.8605394244542387,-0.23689190250395906,-0.07113795108319176,0.21233937750606635,-0.14173866429462906,0.9319844995611866,0.47707143896406223,0.06801550043881337,"Pipeline(steps=[('scaler', MinMaxScaler()),
                ('clf', GaussianNB(var_smoothing=1e-07))])"
